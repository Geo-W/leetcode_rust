pub fn number_of_weeks(milestones: Vec<i32>) -> i64 {
    let max = *milestones.iter().max().unwrap() as i64;
    let sum = milestones.iter().map(|x| *x as i64).sum::<i64>();
    let remainder = sum - max;
    if max > remainder {
        remainder * 2 + 1
    } else {
        sum
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn a() {
        assert_eq!(
            number_of_weeks(vec![
                3040, 2717, 8479, 3308, 5386, 1452, 9484, 2892, 2039, 4811, 7941, 2166, 2868, 1655,
                1252, 9397, 9852, 521, 9263, 5872, 2973, 4886, 5688, 5899, 2199, 6988, 1434, 9380,
                1898, 7961, 4418, 807, 5268, 6927, 9723, 936, 2911, 880, 420, 8682, 1189, 5739,
                9252, 3156, 551, 2391, 5367, 2602, 3913, 131, 9098, 6987, 2087, 1811, 3973, 7024,
                494, 5435, 3047, 6130, 5300, 9176, 3181, 8721, 3952, 370, 256, 971, 4898, 9985,
                7372, 507, 8613, 1730, 2587, 5845, 1506, 1803, 9919, 9928, 7803, 535, 3805, 2418,
                8462, 1432, 7794, 5877, 9838, 3256, 980, 3797, 1475, 5785, 629, 7612, 9373, 1833,
                7092, 567
            ]),
            452033
        );
    }

    #[test]
    fn b() {
        assert_eq!(number_of_weeks(vec![5, 2, 2, 4, 54, 2, 32, 3, 4, 56]), 164);
    }
}
